{"version":3,"sources":["jsx/login.tsx","jsx/loader.jsx","jsx/read.tsx","jsx/update.tsx","jsx/create.tsx","jsx/catalog.tsx","jsx/menu.tsx","index.tsx"],"names":["LoginRequired","component","window","temp","url","Loader","getDataById","textId","getData","this","MessageOff","document","getElementById","style","display","ReactDOM","querySelector","Login","React","constructor","props","super","state","loginOk","console","log","setState","ContinueLoading","setTimeout","submit","bind","e","preventDefault","email","password","emailElement","passwordElement","value","fetch","String","credentials","then","response","ok","componentWillUnmount","render","id","type","className","onClick","htmlFor","name","json","Promise","reject","data","mounted","catch","MessageOn","err","requestId","requestBody","time","Date","now","method","headers","body","pageNumber","HomeView","formId","mainForm","componentDidMount","current","componentDidUpdate","listener","jsonStorage","backgroundColor","checkboxes","i","genresNamesCS","length","push","key","ref","textCS","Checkbox","defaultChecked","getGenreName","Message","hideMenu","Number","savedTextId","titleCS","SubmitButton","item","CheckedCheckboxesJS","FormData","getAll","map","a","JSON","stringify","postData","form","UpdateView","checked","isGenreCheckedCS","inputText","newText","target","forceUpdate","cols","rows","onChange","formData","TextJS","get","TitleJS","SavedTextId","CreateView","inputTitle","CatalogView","click","slice","navigationButtons","redirect","delete","deleteDataById","songs","titlesAndIds","item2","item1","marginLeft","songsCount","Menu","visibilityCss","visibilityFlag","menu","buttons","select","currentTarget","getAttribute","forEach","index","handleClick","event","alert","tagName","defaultProps","StrictMode"],"mappings":"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","file":"static/js/main.15267397.chunk.js","sourcesContent":["import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\nimport { Loader } from \"./loader.jsx\";\r\n\r\ninterface IState {\r\n    style: any;\r\n}\r\n\r\ndeclare global {\r\n    interface Window { textId: number, temp: any }\r\n}\r\n\r\ninterface IProps {\r\n    listener: any;\r\n    formId: any;\r\n    jsonStorage: any;\r\n    id: any;\r\n}\r\n\r\nexport class LoginRequired {\r\n    // восстанавливаем данные (но не последнее действие), не полученные из-за ошибки авторизации\r\n    static ContinueLoading() {\r\n        var component = window.temp;\r\n        if (component) {\r\n            if (component.url === \"/api/update\") {\r\n                // Loader в случае ошибки вызовет MessageOn()\r\n                Loader.getDataById(component, window.textId, component.url);\r\n            } else {\r\n                Loader.getData(component, component.url);\r\n            }\r\n        }\r\n        this.MessageOff();\r\n    }\r\n\r\n    static MessageOff() {\r\n        (document.getElementById(\"loginMessage\")as HTMLElement).style.display = \"none\";\r\n    }\r\n\r\n    static MessageOn(component: any) {\r\n        window.temp = component;\r\n        (document.getElementById(\"loginMessage\")as HTMLElement).style.display = \"block\";\r\n        (document.getElementById(\"login\")as HTMLElement).style.display = \"block\";\r\n        ReactDOM.render(\r\n            <h1>\r\n                LOGIN PLEASE\r\n            </h1>\r\n            , document.querySelector(\"#loginMessage\")\r\n        );\r\n    }\r\n}\r\n\r\nexport class Login extends React.Component<IProps, IState> {\r\n    url: string;\r\n\r\n    public state: IState = {\r\n        style: \"submitStyle\"\r\n    }\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n        this.url = \"/account/login\";\r\n        (document.getElementById(\"login\")as HTMLElement).style.display = \"block\";\r\n    }\r\n\r\n    submit(e: any) {\r\n        e.preventDefault();\r\n        let email = \"test_e\";\r\n        let password = \"test_p\";\r\n        let emailElement = document.getElementById('email') as HTMLInputElement;\r\n        let passwordElement = document.getElementById('password') as HTMLInputElement;\r\n        if (emailElement) email = emailElement.value;\r\n        if (passwordElement) password = passwordElement.value;\r\n\r\n        window.fetch(this.url + \"?email=\" + String(email) + \"&password=\" + String(password), { credentials: \"same-origin\" })\r\n            .then(response => response.ok ? this.loginOk() : console.log(\"Login error\"));\r\n    }\r\n\r\n    loginOk = () => {\r\n        console.log(\"Login ok\");\r\n        this.setState({ style: \"submitStyleGreen\" });\r\n        LoginRequired.ContinueLoading();\r\n        setTimeout(() => {\r\n            (document.getElementById(\"login\")as HTMLElement).style.display = \"none\";\r\n        }, 1500);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // отменяй подписки и асинхронную загрузку\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id={this.state.style}>\r\n                    <input type=\"checkbox\" id=\"loginButton\" className=\"regular-checkbox\" onClick={this.submit} />\r\n                    <label htmlFor=\"loginButton\">Войти</label>\r\n                </div>\r\n                {/*<div id={this.state.style}>*/}\r\n                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                <span>\r\n                    <input type=\"text\" id=\"email\" name=\"email\" />\r\n                </span>\r\n                {/*<div id={this.state.style}>*/}\r\n                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                <span>\r\n                    <input type=\"text\" id=\"password\" name=\"password\" />\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//export default Login;\r\n// загрузка без обработки ошибок\r\n                //fetch(component.url + \"?id=\" + String(window.textId), { credentials: 'same-origin' })\r\n                //    .then(response => response.json())\r\n                //    .then(data => { if (component.mounted) component.setState({ data }) });\r\n\r\n//fetch(component.url, { credentials: 'same-origin' })\r\n                //    .then(response => response.json())\r\n                //    .then(data => { if (component.mounted) component.setState({ data }) });","import { LoginRequired } from \"./login\";//\r\n\r\nexport class Loader {\r\n    //GET request: /api/controller\r\n    static getData(component, url) {\r\n        LoginRequired.MessageOff();\r\n        try {\r\n            window.fetch(url, {\r\n                //устанавливаем куки\r\n                credentials: \"same-origin\"\r\n            })\r\n                .then(response => response.ok ? response.json() : Promise.reject(response))\r\n                .then(data => { if (component.mounted) component.setState({ data }) })\r\n                .catch((e) => LoginRequired.MessageOn(component));//\r\n        } catch (err) {\r\n            console.log(\"Loader try-catch: 1\");\r\n        }\r\n    }\r\n\r\n    //GET request: /api/controller?id=\r\n    static getDataById(component, requestId, url) {\r\n        LoginRequired.MessageOff();\r\n        try {\r\n            window.fetch(url + \"?id=\" + String(requestId), {\r\n                credentials: \"same-origin\"\r\n            })\r\n                .then(response => response.ok ? response.json() : Promise.reject(response))\r\n                .then(data => { if (component.mounted) component.setState({ data }) })\r\n                .catch((e) => LoginRequired.MessageOn(component));//LogForm(component)\r\n        } catch (err) {\r\n            console.log(\"Loader try-catch: 2\");\r\n        }\r\n    }\r\n\r\n    //POST request: /api/controller\r\n    static postData(component, requestBody, url) {\r\n        // ПРОБЛЕМА: при пустых areChecked чекбоксах внешний вид компонента <Сheckboxes> не менялся (после \"ошибки\" POST)\r\n        // при этом все данные были  правильные и рендеринг/обновление проходили успешно (в компоненте <UpdateView>)\r\n        // РЕШЕНИЕ: уникальный key <Checkbox key={\"checkbox \" + i + this.state.time} ...>\r\n        var time = String(Date.now());\r\n        LoginRequired.MessageOff();\r\n        try {\r\n            window.fetch(url, {\r\n                method: \"POST\",\r\n                headers: { 'Content-Type': \"application/json;charset=utf-8\" },\r\n                body: requestBody,\r\n                credentials: \"same-origin\"\r\n            })\r\n                .then(response => response.ok ? response.json() : Promise.reject(response))\r\n                .then(data => component.setState({ data, time }))\r\n                .catch((e) => LoginRequired.MessageOn(component));\r\n        } catch (err) {\r\n            console.log(\"Loader try-catch: 3\");\r\n        }\r\n    }\r\n\r\n    //DELETE request: /api/controller?id=\r\n    static deleteDataById(component, requestId, url, pageNumber) {\r\n        LoginRequired.MessageOff();\r\n        try {\r\n            window.fetch(url + \"?id=\" + String(requestId) + \"&pg=\" + String(pageNumber), {\r\n                method: \"DELETE\",\r\n                credentials: \"same-origin\"\r\n            })\r\n                .then(response => response.ok ? response.json() : Promise.reject(response))\r\n                .then(data => { if (component.mounted) component.setState({ data }) })\r\n                .catch((e) => LoginRequired.MessageOn(component));//LogForm(component)\r\n        } catch (err) {\r\n            console.log(\"Loader try-catch: 2\");\r\n        }\r\n    }\r\n}","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport { Loader } from \"./loader.jsx\";\r\n\r\ninterface IState {\r\n    data: any;\r\n}\r\ninterface IProps {\r\n    listener: any;\r\n    formId: any;\r\n    jsonStorage: any;\r\n    id: any;\r\n}\r\n\r\nexport class HomeView extends React.Component<IState> {\r\n    url: string;\r\n    formId: any;\r\n    mounted: boolean;\r\n\r\n    public state: IState = {\r\n        data: null\r\n    }\r\n\r\n    mainForm: React.RefObject<HTMLFormElement>;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.url = '/api/read';\r\n        this.formId = null;\r\n        this.mounted = true;\r\n\r\n        this.mainForm = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        //[Obsolete] this.formId = ReactDOM.findDOMNode(this.refs.mainForm);\r\n        this.formId = this.mainForm.current;\r\n        Loader.getData(this, this.url);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        ReactDOM.render(\r\n            <div>\r\n                <SubmitButton listener={this} formId={this.formId} jsonStorage id/>\r\n            </div>,\r\n            document.querySelector(\"#searchButton1\")\r\n        );\r\n        //внешняя зависимость\r\n        (document.getElementById(\"header\")as HTMLElement).style.backgroundColor = \"#e9ecee\";//???\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    render() {\r\n        var checkboxes = [];\r\n        if (this.state.data != null) {\r\n            for (var i = 0; i < this.state.data.genresNamesCS.length; i++) {\r\n                checkboxes.push(<Checkbox key={`checkbox ${i}`} id={i} jsonStorage={this.state.data} listener formId/>);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                \r\n                <form ref={this.mainForm}//[Obsolete] ref=\"mainForm\"\r\n                    id=\"dizzy\">\r\n                    {checkboxes}\r\n                </form>\r\n                <div id=\"messageBox\">\r\n                    {this.state.data != null && this.state.data.textCS != null &&\r\n                        <Message formId={this.formId} jsonStorage={this.state.data} listener id/>\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Checkbox extends React.Component<IProps> {\r\n    render() {\r\n        var getGenreName = (i: number) => { return this.props.jsonStorage.genresNamesCS[i]; };\r\n        return (\r\n            <div id=\"checkboxStyle\">\r\n                <input name=\"chkButton\" value={this.props.id} type=\"checkbox\" id={this.props.id} className=\"regular-checkbox\" defaultChecked={false} />\r\n                <label htmlFor={this.props.id}>{getGenreName(this.props.id)}</label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Message extends React.Component<IProps> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.hideMenu = this.hideMenu.bind(this);\r\n    }\r\n\r\n    hideMenu(e: any) {\r\n        if (this.props.formId.style.display !== \"none\") {\r\n            this.props.formId.style.display = \"none\";\r\n            //внешняя зависимость\r\n            (document.getElementById(\"login\")as HTMLElement).style.display = \"none\";/////////////\r\n            return;\r\n        }\r\n        this.props.formId.style.display = \"block\";\r\n    }\r\n\r\n    render() {\r\n        if (this.props.jsonStorage && Number(this.props.jsonStorage.savedTextId) !== 0) window.textId = Number(this.props.jsonStorage.savedTextId);\r\n\r\n        return (\r\n            <span>\r\n                {this.props.jsonStorage != null ? (this.props.jsonStorage.textCS != null ?\r\n                    <span>\r\n                        <div id=\"songTitle\" onClick={this.hideMenu}>\r\n                            {this.props.jsonStorage.titleCS}\r\n                        </div>\r\n                        <div id=\"songBody\">\r\n                                {this.props.jsonStorage.textCS}\r\n                        </div>\r\n                    </span>\r\n                    : \"выберите жанр\")\r\n                    : \"\"}\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nclass SubmitButton extends React.Component<IProps> {\r\n    url: string;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n        this.url = '/api/read';\r\n    }\r\n\r\n    submit(e: any) {\r\n        e.preventDefault();\r\n        //внешняя зависимость\r\n        (document.getElementById(\"login\") as HTMLElement).style.display = \"none\";\r\n        var formData = new FormData(this.props.formId);\r\n        var checkboxesArray = (formData.getAll(\"chkButton\")).map(a => Number(a) + 1);\r\n        const item = {\r\n            CheckedCheckboxesJS: checkboxesArray\r\n        };\r\n        var requestBody = JSON.stringify(item);\r\n        Loader.postData(this.props.listener, requestBody, this.url);\r\n        //внешняя зависимость\r\n        (document.getElementById(\"header\") as HTMLElement).style.backgroundColor = \"slategrey\";//#4cff00\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //отменяй подписки и асинхронную загрузку\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"submitStyle\">\r\n                <input form=\"dizzy\" type=\"checkbox\" id=\"submitButton\" className=\"regular-checkbox\" onClick={this.submit} />\r\n                <label htmlFor=\"submitButton\">Поиск</label>\r\n            </div>\r\n        );\r\n    }\r\n}","import * as React from 'react';\r\nimport { Loader } from \"./loader.jsx\";\r\n\r\ninterface IState {\r\n    data: any;\r\n    time: any;\r\n}\r\n\r\ninterface IProps {\r\n    listener: any;\r\n    formId: any;\r\n    jsonStorage: any;\r\n    id: any;\r\n}\r\n\r\nclass UpdateView extends React.Component<IProps, IState> {\r\n    url: string;\r\n    formId: any;\r\n    mounted: boolean;\r\n\r\n    public state: IState = {\r\n        data: null,\r\n        time: null\r\n    }\r\n\r\n    mainForm: React.RefObject<HTMLFormElement>;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.url = '/api/update';\r\n        this.formId = null;\r\n        this.mounted = true;\r\n\r\n        this.mainForm = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.formId = this.mainForm.current;\r\n        Loader.getDataById(this, window.textId, this.url);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    render() {\r\n        var checkboxes = [];\r\n        if (this.state != null && this.state.data != null) {\r\n            for (var i = 0; i < this.state.data.genresNamesCS.length; i++) {\r\n                checkboxes.push(<Checkbox key={\"checkbox \" + i + this.state.time} id={i} jsonStorage={this.state.data} listener formId/>);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <form ref={this.mainForm}\r\n                    id=\"dizzy\">\r\n                    {checkboxes}\r\n                    {this.state.data != null &&\r\n                        <SubmitButton listener={this} formId={this.formId} jsonStorage={this.state.data} id/>\r\n                    }\r\n                </form>\r\n                {this.state.data != null && this.state.data.textCS != null &&\r\n                    <Message formId={this.formId} jsonStorage={this.state.data} listener id/>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Checkbox extends React.Component<IProps> {\r\n    \r\n    render() {\r\n        var checked = this.props.jsonStorage.isGenreCheckedCS[this.props.id] === \"checked\" ? true : false;\r\n        var getGenreName = (i: number) => { return this.props.jsonStorage.genresNamesCS[i]; };\r\n        return (\r\n            <div id=\"checkboxStyle\">\r\n                <input name=\"chkButton\" value={this.props.id} type=\"checkbox\" id={this.props.id} className=\"regular-checkbox\"\r\n                    defaultChecked={checked} />\r\n                <label htmlFor={this.props.id}>{getGenreName(this.props.id)}</label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Message extends React.Component<IProps> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.hideMenu = this.hideMenu.bind(this);\r\n    }\r\n\r\n    hideMenu(e: any) {\r\n        if (this.props.formId.style.display !== \"none\") {\r\n            this.props.formId.style.display = \"none\";\r\n            return;\r\n        }\r\n        this.props.formId.style.display = \"block\";\r\n    }\r\n\r\n    inputText = (e: any) => {\r\n        const newText = e.target.value;\r\n        this.props.jsonStorage.textCS = newText;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <p />\r\n                {this.props.jsonStorage != null ? (this.props.jsonStorage.textCS != null ?\r\n                    <div>\r\n                        <h1 onClick={this.hideMenu}>\r\n                            {this.props.jsonStorage.titleCS}\r\n                        </h1>\r\n                        <h5>\r\n                            <textarea name=\"msg\" cols={66} rows={30} form=\"dizzy\"\r\n                                value={this.props.jsonStorage.textCS} onChange={this.inputText} />\r\n                        </h5>\r\n                    </div>\r\n                    : \"выберите песню\")\r\n                    : \"loading..\"}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass SubmitButton extends React.Component<IProps> {\r\n    url: string;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n        this.url = '/api/update';\r\n    }\r\n\r\n    submit(e: any) {\r\n        e.preventDefault();\r\n        var formData = new FormData(this.props.formId);\r\n        var checkboxesArray = (formData.getAll(\"chkButton\")).map(a => Number(a) + 1);\r\n        var formMessage = formData.get(\"msg\");\r\n        const item = {\r\n            CheckedCheckboxesJS: checkboxesArray,\r\n            TextJS: formMessage,\r\n            TitleJS: this.props.jsonStorage.titleCS,\r\n            SavedTextId: window.textId\r\n            //InitialCheckboxes: this.props.jsonStorage.initialCheckboxes.map(a => Number(a))\r\n        };\r\n        var requestBody = JSON.stringify(item);\r\n        Loader.postData(this.props.listener, requestBody, this.url);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //отменяй подписки и асинхронную загрузку\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"submitStyle\">\r\n                <input type=\"checkbox\" id=\"submitButton\" className=\"regular-checkbox\" onClick={this.submit} />\r\n                <label htmlFor=\"submitButton\">Сохранить</label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateView;","import * as React from 'react';\r\nimport { Loader } from \"./loader.jsx\";\r\n\r\ninterface IState {\r\n    data: any;\r\n    time: any;\r\n}\r\n\r\ninterface IProps {\r\n    listener: any;\r\n    formId: any;\r\n    jsonStorage: any;\r\n    id: any;\r\n}\r\n\r\nclass CreateView extends React.Component<IState> {\r\n    url: string;\r\n    formId: any;\r\n    mounted: boolean;\r\n\r\n    public state: IState = {\r\n        data: null,\r\n        time: null//?????получи реальное время иначе key отвалятся\r\n    }\r\n\r\n    mainForm: React.RefObject<HTMLFormElement>;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.url = \"/api/create\";\r\n        this.formId = null;\r\n        this.mounted = true;\r\n\r\n        this.mainForm = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.formId = this.mainForm.current;\r\n        Loader.getData(this, this.url);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        var id = 0;\r\n        if (this.state.data) id = Number(this.state.data.savedTextId);\r\n        if (id !== 0) window.textId = id;\r\n    }\r\n\r\n    render() {\r\n        var checkboxes = [];\r\n        if (this.state.data != null) {\r\n            for (var i = 0; i < this.state.data.genresNamesCS.length; i++) {\r\n                checkboxes.push(<Checkbox key={`checkbox ${i}${this.state.time}`} id={i} jsonStorage={this.state.data} listener formId/>);\r\n            }\r\n        }\r\n\r\n        var jsonStorage = this.state.data;\r\n        if (jsonStorage) {\r\n            if (!jsonStorage.textCS) jsonStorage.textCS = \"\";\r\n            if (!jsonStorage.titleCS) jsonStorage.titleCS = \"\";\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <form ref={this.mainForm}\r\n                    id=\"dizzy\">\r\n                    {checkboxes}\r\n                    {this.state.data != null &&\r\n                        <SubmitButton listener={this} formId={this.formId} id jsonStorage/>\r\n                    }\r\n                </form>\r\n                {this.state.data != null &&\r\n                    <Message formId={this.formId} jsonStorage={jsonStorage} listener id/>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Checkbox extends React.Component<IProps> {\r\n\r\n    render() {\r\n        var checked = this.props.jsonStorage.isGenreCheckedCS[this.props.id] === \"checked\" ? true : false;\r\n        var getGenreName = (i: number) => { return this.props.jsonStorage.genresNamesCS[i]; };\r\n        return (\r\n            <div id=\"checkboxStyle\">\r\n                <input name=\"chkButton\" value={this.props.id} type=\"checkbox\" id={this.props.id} className=\"regular-checkbox\"\r\n                    defaultChecked={checked} />\r\n                <label htmlFor={this.props.id}>{getGenreName(this.props.id)}</label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass CheckboxBts extends React.Component<IProps> {\r\n\r\n    render() {\r\n        var checked = this.props.jsonStorage.isGenreCheckedCS[this.props.id] === \"checked\" ? true : false;\r\n        var getGenreName = (i: number) => { return this.props.jsonStorage.genresNamesCS[i]; };\r\n        return (\r\n            //нужен site.css\r\n            <label className=\"checkbox-btn\">\r\n                    <input name=\"chkButton\" value={this.props.id} type=\"checkbox\" id={this.props.id}\r\n                    defaultChecked = { checked } />\r\n                    <span style={{ lineHeight: 30 + 'px' }}>{getGenreName(this.props.id)}</span>\r\n            </label>\r\n        );\r\n    }\r\n}\r\n\r\nclass Message extends React.Component<IProps> {\r\n    inputText = (e: any) => {\r\n        const newText = e.target.value;\r\n        this.props.jsonStorage.textCS = newText;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    inputTitle = (e: any) => {\r\n        const newText = e.target.value;\r\n        this.props.jsonStorage.titleCS = newText;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <p />\r\n                {this.props.jsonStorage != null ?\r\n                    <div>\r\n                        <h5>\r\n                            <textarea name=\"ttl\" cols={66} rows={1} form=\"dizzy\"\r\n                                value={this.props.jsonStorage.titleCS} onChange={this.inputTitle} />\r\n                        </h5>\r\n                        <h5>\r\n                            <textarea name=\"msg\" cols={66} rows={30} form=\"dizzy\"\r\n                                value={this.props.jsonStorage.textCS} onChange={this.inputText} />\r\n                        </h5>\r\n                    </div>\r\n                    : \"loading..\"}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass SubmitButton extends React.Component<IProps> {\r\n    url: string;\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n        this.url = \"/api/create\";\r\n    }\r\n\r\n    submit(e: any) {\r\n        e.preventDefault();\r\n        var formData = new FormData(this.props.formId);\r\n        var checkboxesArray = (formData.getAll('chkButton')).map(a => Number(a) + 1);\r\n        var formMessage = formData.get('msg');\r\n        var formTitle = formData.get('ttl');\r\n        const item = {\r\n            CheckedCheckboxesJS: checkboxesArray,\r\n            TextJS: formMessage,\r\n            TitleJS: formTitle\r\n        };\r\n        var requestBody = JSON.stringify(item);\r\n        Loader.postData(this.props.listener, requestBody, this.url);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //отменяй подписки и асинхронную загрузку\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"submitStyle\">\r\n                <input type=\"checkbox\" id=\"submitButton\" className=\"regular-checkbox\" onClick={this.submit} />\r\n                <label htmlFor=\"submitButton\">Создать</label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateView;","import * as React from 'react';\r\nimport { Loader } from \"./loader.jsx\";\r\n\r\ninterface IState {\r\n    data: any;\r\n}\r\ninterface IProps {\r\n    listener: any;\r\n}\r\n\r\nclass CatalogView extends React.Component<IProps, IState> {\r\n    url: string;\r\n    mounted: boolean;\r\n\r\n    public state: IState = {\r\n    data: null\r\n}\r\n\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.url = \"/api/catalog\";\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        Loader.getDataById(this, 1, this.url);\r\n    }\r\n\r\n    click = (e: any) => {\r\n        e.preventDefault();\r\n        var target = Number(e.target.id.slice(7));\r\n        const item = {\r\n            pageNumber: this.state.data.pageNumber,\r\n            navigationButtons: [target]\r\n        };\r\n        var requestBody = JSON.stringify(item);\r\n        Loader.postData(this, requestBody, this.url);\r\n    }\r\n\r\n    redirect = (e: any) => {\r\n        e.preventDefault();\r\n        var id = Number(e.target.id);\r\n        this.props.listener.setState({ id: id });\r\n    }\r\n\r\n    delete = (e: any) => {\r\n        e.preventDefault();\r\n        var id = Number(e.target.id);\r\n        console.log('You want to delete song with id: ' + id);\r\n        Loader.deleteDataById(this, id, this.url, this.state.data.pageNumber);\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.data) return null;\r\n        var songs = [];\r\n        for (let i = 0; i < this.state.data.titlesAndIds.length; i++) {\r\n            songs.push(\r\n                <tr key={\"song \" + i} className=\"bg-warning\">\r\n                    <td></td>\r\n                    <td>\r\n                        <button className=\"btn btn-outline-light\" id={this.state.data.titlesAndIds[i].item2}\r\n                            onClick={this.redirect}>{this.state.data.titlesAndIds[i].item1}\r\n                        </button>\r\n                    </td>\r\n                    <td>\r\n                        <button className=\"btn btn-outline-light\" id={this.state.data.titlesAndIds[i].item2} onClick={this.delete}>\r\n                            &#10060;\r\n                        </button>\r\n                    </td>\r\n                </tr>);\r\n        }\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <p style={{ marginLeft: 12 + '%' }}>\r\n                    Всего песен: {this.state.data.songsCount} &nbsp;\r\n                    Страница: {this.state.data.pageNumber} &nbsp;\r\n                </p>\r\n                <p></p>\r\n                <p></p>\r\n                <table className=\"table\" id=\"catalogTable\">\r\n                    <thead className=\"thead-dark \">\r\n                        <tr>\r\n                            <th ></th>\r\n                            <th >\r\n                                <form>\r\n                                    <button id=\"js-nav-1\" className=\"btn btn-info\" onClick={this.click}>\r\n                                         &lt;Назад\r\n                                    </button>\r\n                                    &nbsp;\r\n                                    <button id=\"js-nav-2\" className=\"btn btn-info\" onClick={this.click}>\r\n                                          Вперёд&gt;\r\n                                    </button>\r\n                                </form>\r\n                            </th>\r\n                            <th ></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {songs}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CatalogView;","import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\n\r\nimport { HomeView } from \"./read\";\r\nimport UpdateView from \"./update\";\r\nimport CreateView from \"./create\";\r\nimport CatalogView from \"./catalog\";\r\nimport { Login } from \"./login\";\r\n\r\ndeclare global {\r\n    interface Window { textId: number }\r\n}\r\nwindow.textId = 0;\r\n\r\ninterface IProps {\r\n    visibilityCss: string[];\r\n    visibilityFlag: boolean[];\r\n    menu: string[];\r\n}\r\n\r\ninterface IState {\r\n    id: number | any;\r\n}\r\n\r\nexport default class Menu extends React.Component<IProps, IState> {\r\n    visibilityCss: string[];\r\n    visibilityFlag: boolean[];\r\n    menu: string[];\r\n    buttons: any;\r\n\r\n    public static defaultProps: Partial<IProps> = {\r\n        visibilityCss: [\"act\", \"pas\", \"pas\", \"pas\"],\r\n        visibilityFlag: [true, false, false, false],\r\n        menu: [\"Посмотреть\", \"Поменять\", \"Создать\", \"Каталог\"]\r\n    }\r\n    public state: IState = {\r\n        id: null\r\n    }\r\n\r\n    constructor(a: IProps) {\r\n        super(a);\r\n        this.select = this.select.bind(this);\r\n        this.visibilityCss = [\"act\", \"pas\", \"pas\", \"pas\"];\r\n        this.visibilityFlag = [true, false, false, false];\r\n        this.menu = [\"Посмотреть\", \"Поменять\", \"Создать\", \"Каталог\"];\r\n    }\r\n\r\n    select(e: any) {\r\n        var target = Number(e.currentTarget.getAttribute('id').slice(5));\r\n        //если меняем невыбранное\r\n        if (target === 1 && window.textId === 0) return;\r\n\r\n        this.visibilityFlag.forEach((value, index) => this.visibilityFlag[index] = false);\r\n        this.visibilityFlag[target] = !this.visibilityFlag[target];\r\n        this.forceUpdate();//this.setState(this.state)\r\n    }\r\n\r\n    handleClick(event: any) {\r\n        event.preventDefault();\r\n        alert(event.currentTarget.tagName);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.id) this.setState({ id: null });\r\n        if (!this.visibilityFlag[0]) {\r\n            //костыль, убирает кнопку \"Поиск\"\r\n            ReactDOM.render(\r\n                <div>\r\n                </div>,\r\n                document.querySelector(\"#searchButton1\")\r\n            );\r\n        }\r\n    }\r\n\r\n    render() {\r\n        //костыль - переключаемся из catalog на changeText\r\n        if (this.state.id) {\r\n            this.visibilityFlag = [false, true, false, false];\r\n            window.textId = this.state.id;\r\n        }\r\n\r\n        this.visibilityFlag.forEach((value, index) => this.visibilityFlag[index] ?\r\n            this.visibilityCss[index] = \"act\" : this.visibilityCss[index] = \"pas\");\r\n\r\n        this.buttons = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            this.buttons.push(<button key={\"menu \" + i} onClick={this.select} id={\"menu \" + String(i)}\r\n                className={this.visibilityCss[i]}\r\n            //className=\"btn btn-info\" style={{ margin: 10 + 'px' }}\r\n            >\r\n                {this.menu[i]}</button>);\r\n        }\r\n\r\n        //+TODO: не отображать кнопку пока не загрузилось\r\n        //+TODO: менять цвет кнопки при выполнении POST запроса\r\n        //+TODO: зачем view={this.visibilityFlag[0]}\r\n        //TODO: список жанров точно один на всю сессию (кол-во песен в них будет отличаться) - зачем его грузить каждый раз?\r\n        //TODO: экран некрасиво мигает при переключении пунктов меню\r\n\r\n        return (\r\n            <div>\r\n                <div id=\"header\">\r\n                    {this.buttons}\r\n                </div>\r\n                {/*первый пункт меню*/}\r\n                {this.visibilityFlag[0] === true &&\r\n                    <div id=\"renderContainer1\">\r\n                        <HomeView data />\r\n                    </div>\r\n                }\r\n                {/*второй пункт меню*/}\r\n                {this.visibilityFlag[1] === true &&\r\n                    <div id=\"renderContainer\">\r\n                        <UpdateView listener formId id jsonStorage />\r\n                    </div>\r\n                }\r\n                {/*третий пункт меню*/}\r\n                {this.visibilityFlag[2] === true &&\r\n                    <div id=\"renderContainer\">\r\n                        <CreateView data time />\r\n                    </div>\r\n                }\r\n                {/*четвертый пункт меню*/}\r\n                {this.visibilityFlag[3] === true &&\r\n                    <div id=\"renderContainer\">\r\n                        <CatalogView listener={this} />\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nReactDOM.render(\r\n    <Login listener={this} formId jsonStorage id/>\r\n    , document.querySelector(\"#renderLoginForm\")\r\n);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Menu from \"./jsx/menu\";\r\nimport './bootstrap.css';\r\nimport './react.css';\r\n\r\nconsole.log('start');\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Menu />\r\n    </React.StrictMode>\r\n  ,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n//reportWebVitals();\r\n\r\n//ReactDOM.render(\r\n//    <React.StrictMode>\r\n//        <Test />\r\n//    </React.StrictMode>\r\n//    ,\r\n//    document.getElementById('root')\r\n//);\r\n\r\n// visibilityCss={[]} visibilityFlag={[]} menu={[]}"],"sourceRoot":""}