{"version":3,"sources":["login.jsx","loader.jsx","read.jsx","update.jsx","create.jsx","catalog.jsx","menu.jsx","index.js"],"names":["LoginRequired","component","window","temp","url","Loader","getDataById","textId","getData","this","MessageOff","document","getElementById","style","display","ReactDOM","render","querySelector","Login","props","loginOk","console","log","setState","ContinueLoading","setTimeout","submit","bind","state","e","preventDefault","email","value","password","fetch","String","credentials","then","response","ok","id","type","className","onClick","htmlFor","name","React","Component","json","Promise","reject","data","mounted","catch","MessageOn","err","requestId","requestBody","time","Date","now","method","headers","body","HomeView","formId","findDOMNode","refs","mainForm","listener","backgroundColor","checkboxes","i","genresNamesCS","length","push","jsonStorage","ref","textCS","Checkbox","defaultChecked","Message","hideMenu","Number","savedTextId","titleCS","SubmitButton","item","CheckedCheckboxesJS","FormData","getAll","map","a","JSON","stringify","postData","form","UpdateView","checked","isGenreCheckedCS","inputText","newText","target","forceUpdate","cols","rows","onChange","formData","TextJS","get","TitleJS","SavedTextId","CreateView","inputTitle","CatalogView","click","slice","pageNumber","navigationButtons","redirect","songs","titlesAndIds","item2","item1","marginLeft","songsCount","width","Menu","select","visibilityCss","visibilityFlag","menu","forEach","index","buttons"],"mappings":"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","file":"static/js/main.cb4434c5.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Loader } from \"./loader\";\r\n//document.location.href = \"/\";\r\n\r\nexport class LoginRequired {\r\n    // восстанавливаем данные (но не последнее действие), не полученные из-за ошибки авторизации\r\n    static ContinueLoading() {\r\n        var component = window.temp;\r\n        if (component) {\r\n            if (component.url == '/api/update') {\r\n                // Loader в случае ошибки вызовет MessageOn()\r\n                Loader.getDataById(component, window.textId, component.url);\r\n            } else {\r\n                Loader.getData(component, component.url);\r\n            }\r\n        }\r\n        this.MessageOff();\r\n    }\r\n\r\n    static MessageOff() {\r\n        document.getElementById(\"loginMessage\").style.display = \"none\";\r\n    }\r\n\r\n    static MessageOn(component) {\r\n        window.temp = component;\r\n        document.getElementById(\"loginMessage\").style.display = \"block\";\r\n        document.getElementById(\"login\").style.display = \"block\";\r\n        ReactDOM.render(\r\n            <h1>\r\n                LOGIN PLEASE\r\n            </h1>\r\n            , document.querySelector(\"#loginMessage\")\r\n        );\r\n    }\r\n}\r\n\r\nexport class Login extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n        this.url = '/account/login';\r\n        this.state = { style: \"submitStyle\" };\r\n        document.getElementById(\"login\").style.display = \"block\";\r\n    }\r\n\r\n    submit(e) {\r\n        e.preventDefault();\r\n        let email = document.getElementById(\"email\").value;\r\n        let password = document.getElementById(\"password\").value;\r\n        fetch(this.url + \"?email=\" + String(email) + \"&password=\" + String(password), { credentials: 'include', })\r\n            .then(response => response.ok ? this.loginOk() : console.log('Login error'));\r\n    }\r\n\r\n    loginOk = () => {\r\n        console.log('Login ok');\r\n        this.setState({ style: \"submitStyleGreen\" });\r\n        LoginRequired.ContinueLoading();\r\n        setTimeout(() => {\r\n            document.getElementById(\"login\").style.display = \"none\";\r\n        }, 1500);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        // отменяй подписки и асинхронную загрузку\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <div id={this.state.style}>\r\n                    <input type=\"checkbox\" id=\"loginButton\" className=\"regular-checkbox\" onClick={this.submit} />\r\n                    <label htmlFor=\"loginButton\">Войти</label>\r\n                </div>\r\n                {/*<div id={this.state.style}>*/}\r\n                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                <span>\r\n                    <input type=\"text\" id=\"email\" name=\"email\" />\r\n                </span>\r\n                {/*<div id={this.state.style}>*/}\r\n                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                <span>\r\n                    <input type=\"text\" id=\"password\" name=\"password\" />\r\n                </span>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// загрузка без обработки ошибок\r\n                //fetch(component.url + \"?id=\" + String(window.textId), { credentials: 'same-origin' })\r\n                //    .then(response => response.json())\r\n                //    .then(data => { if (component.mounted) component.setState({ data }) });\r\n\r\n//fetch(component.url, { credentials: 'same-origin' })\r\n                //    .then(response => response.json())\r\n                //    .then(data => { if (component.mounted) component.setState({ data }) });","import { LoginRequired } from \"./login\";\r\n\r\nexport class Loader {\r\n    //GET request: /api/controller\r\n    static getData(component, url) {\r\n        LoginRequired.MessageOff();\r\n        try {\r\n            fetch(url, {\r\n\t\t//method: 'GET',\r\n\t\t//headers: { 'Content-Type': 'application/json;charset=utf-8' },\r\n                //устанавливаем куки credentials: 'same-origin' или 'include' для cors\r\n                credentials: 'same-origin'\r\n            })\r\n                .then(response => response.ok ? response.json() : Promise.reject(response))\r\n                .then(data => { if (component.mounted) component.setState({ data }) })\r\n                .catch((e) => LoginRequired.MessageOn(component));//\r\n        } catch (err) {\r\n            console.log(\"Loader try-catch: 1\");\r\n        }\r\n    }\r\n\r\n    //GET request: /api/controller?id=\r\n    static getDataById(component, requestId, url) {\r\n        LoginRequired.MessageOff();\r\n        try {\r\n            fetch(url + \"?id=\" + String(requestId), {\r\n                credentials: 'same-origin'\r\n            })\r\n                .then(response => response.ok ? response.json() : Promise.reject(response))\r\n                .then(data => { if (component.mounted) component.setState({ data }) })\r\n                .catch((e) => LoginRequired.MessageOn(component));//LogForm(component)\r\n        } catch (err) {\r\n            console.log(\"Loader try-catch: 2\");\r\n        }\r\n    }\r\n\r\n    //POST request: /api/controller\r\n    static postData(component, requestBody, url) {\r\n        // ПРОБЛЕМА: при пустых areChecked чекбоксах внешний вид компонента <Сheckboxes> не менялся (после \"ошибки\" POST)\r\n        // при этом все данные были  правильные и рендеринг/обновление проходили успешно (в компоненте <UpdateView>)\r\n        // РЕШЕНИЕ: уникальный key <Checkbox key={\"checkbox \" + i + this.state.time} ...>\r\n        var time = String(Date.now());\r\n        LoginRequired.MessageOff();\r\n        try {\r\n            fetch(url, {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json;charset=utf-8' },\r\n                body: requestBody,\r\n                credentials: 'same-origin'\r\n            })\r\n                .then(response => response.ok ? response.json() : Promise.reject(response))\r\n                .then(data => component.setState({ data, time }))\r\n                .catch((e) => LoginRequired.MessageOn(component));\r\n        } catch (err) {\r\n            console.log(\"Loader try-catch: 3\");\r\n        }\r\n    }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Loader } from \"./loader\";\r\n\r\nexport class HomeView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { data: null };\r\n        //this.url = 'http://nick219-001-site1.htempurl.com/api/read';\r\n\t//this.url = 'http://localhost:5000/api/read';\r\n\tthis.url = '/api/read';\r\n        this.formId = null;\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.formId = ReactDOM.findDOMNode(this.refs.mainForm);\r\n        Loader.getData(this, this.url);\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        ReactDOM.render(\r\n            <div>\r\n                <SubmitButton listener={this} formId={this.formId} />\r\n            </div>,\r\n            document.querySelector(\"#searchButton1\")\r\n        );\r\n        //внешняя зависимость\r\n        document.getElementById(\"header\").style.backgroundColor = \"#e9ecee\";\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    render() {\r\n        var checkboxes = [];\r\n        if (this.state.data != null) {\r\n            for (var i = 0; i < this.state.data.genresNamesCS.length; i++) {\r\n                checkboxes.push(<Checkbox key={\"checkbox \" + i} id={i} jsonStorage={this.state.data} />);\r\n            }\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                \r\n                <form ref=\"mainForm\" id=\"dizzy\">\r\n                    {checkboxes}\r\n                </form>\r\n                <div id=\"messageBox\">\r\n                    {this.state.data != null && this.state.data.textCS != null &&\r\n                        <Message formId={this.formId} jsonStorage={this.state.data} />\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Checkbox extends React.Component {\r\n    render() {\r\n        var getGenreName = (i) => { return this.props.jsonStorage.genresNamesCS[i]; };\r\n        return (\r\n            <div id=\"checkboxStyle\">\r\n                <input name=\"chkButton\" value={this.props.id} type=\"checkbox\" id={this.props.id} className=\"regular-checkbox\" defaultChecked=\"\" />\r\n                <label htmlFor={this.props.id}>{getGenreName(this.props.id)}</label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Message extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.hideMenu = this.hideMenu.bind(this);\r\n    }\r\n\r\n    hideMenu(e) {\r\n        if (this.props.formId.style.display != \"none\") {\r\n            this.props.formId.style.display = \"none\";\r\n            //внешняя зависимость\r\n            document.getElementById(\"login\").style.display = \"none\";\r\n            return;\r\n        }\r\n        this.props.formId.style.display = \"block\";\r\n    }\r\n\r\n    render() {\r\n        if (this.props.jsonStorage && Number(this.props.jsonStorage.savedTextId) != 0) window.textId = Number(this.props.jsonStorage.savedTextId);\r\n\r\n        return (\r\n            <span>\r\n                {this.props.jsonStorage != null ? (this.props.jsonStorage.textCS != null ?\r\n                    <span>\r\n                        <div id=\"songTitle\" onClick={this.hideMenu}>\r\n                            {this.props.jsonStorage.titleCS}\r\n                        </div>\r\n                        <div id=\"songBody\">\r\n                                {this.props.jsonStorage.textCS}\r\n                        </div>\r\n                    </span>\r\n                    : \"выберите жанр\")\r\n                    : \"\"}\r\n            </span>\r\n        );\r\n    }\r\n}\r\n\r\nclass SubmitButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n        //this.url = 'http://localhost:5000/api/read';\r\n\tthis.url = '/api/read';\r\n    }\r\n\r\n    submit(e) {\r\n        e.preventDefault();\r\n        //внешняя зависимость\r\n        document.getElementById(\"login\").style.display = \"none\";\r\n        var formData = new FormData(this.props.formId);\r\n        var checkboxesArray = (formData.getAll('chkButton')).map(a => Number(a) + 1);\r\n        const item = {\r\n            CheckedCheckboxesJS: checkboxesArray\r\n        };\r\n        var requestBody = JSON.stringify(item);\r\n        Loader.postData(this.props.listener, requestBody, this.url);\r\n        //внешняя зависимость\r\n        document.getElementById(\"header\").style.backgroundColor = \"slategrey\";//#4cff00\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //отменяй подписки и асинхронную загрузку\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"submitStyle\">\r\n                <input form=\"dizzy\" type=\"checkbox\" id=\"submitButton\" className=\"regular-checkbox\" onClick={this.submit} />\r\n                <label htmlFor=\"submitButton\">Поиск</label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//export default HomeView;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Loader } from \"./loader\";\r\n\r\nclass UpdateView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { data: null };\r\n        this.url = '/api/update';\r\n        this.formId = null;\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.formId = ReactDOM.findDOMNode(this.refs.mainForm);\r\n        Loader.getDataById(this, window.textId, this.url);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    render() {\r\n        var checkboxes = [];\r\n        if (this.state.data != null) {\r\n            for (var i = 0; i < this.state.data.genresNamesCS.length; i++) {\r\n                checkboxes.push(<Checkbox key={\"checkbox \" + i + this.state.time} id={i} jsonStorage={this.state.data} />);\r\n                //\r\n            }\r\n            //\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <form ref=\"mainForm\" id=\"dizzy\">\r\n                    {checkboxes}\r\n                    {this.state.data != null &&\r\n                        <SubmitButton listener={this} formId={this.formId} jsonStorage={this.state.data} />\r\n                    }\r\n                </form>\r\n                {this.state.data != null && this.state.data.textCS != null &&\r\n                    <Message formId={this.formId} jsonStorage={this.state.data} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Checkbox extends React.Component {\r\n    \r\n    render() {\r\n        var checked = this.props.jsonStorage.isGenreCheckedCS[this.props.id] == \"checked\" ? \"checked\" : \"\";\r\n        var getGenreName = (i) => { return this.props.jsonStorage.genresNamesCS[i]; };\r\n        return (\r\n            <div id=\"checkboxStyle\">\r\n                <input name=\"chkButton\" value={this.props.id} type=\"checkbox\" id={this.props.id} className=\"regular-checkbox\"\r\n                    defaultChecked={checked} />\r\n                <label htmlFor={this.props.id}>{getGenreName(this.props.id)}</label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Message extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.hideMenu = this.hideMenu.bind(this);\r\n    }\r\n\r\n    hideMenu(e) {\r\n        if (this.props.formId.style.display != \"none\") {\r\n            this.props.formId.style.display = \"none\";\r\n            return;\r\n        }\r\n        this.props.formId.style.display = \"block\";\r\n    }\r\n\r\n    inputText = (e) => {\r\n        const newText = e.target.value;\r\n        this.props.jsonStorage.textCS = newText;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <p />\r\n                {this.props.jsonStorage != null ? (this.props.jsonStorage.textCS != null ?\r\n                    <div>\r\n                        <h1 onClick={this.hideMenu}>\r\n                            {this.props.jsonStorage.titleCS}\r\n                        </h1>\r\n                        <h5>\r\n                            <textarea name=\"msg\" cols=\"66\" rows=\"30\" form=\"dizzy\"\r\n                                value={this.props.jsonStorage.textCS} onChange={this.inputText} />\r\n                        </h5>\r\n                    </div>\r\n                    : \"выберите песню\")\r\n                    : \"loading..\"}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass SubmitButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n        this.url = '/api/update';\r\n    }\r\n\r\n    submit(e) {\r\n        e.preventDefault();\r\n        var formData = new FormData(this.props.formId);\r\n        var checkboxesArray = (formData.getAll('chkButton')).map(a => Number(a) + 1);\r\n        var formMessage = formData.get('msg');\r\n        const item = {\r\n            CheckedCheckboxesJS: checkboxesArray,\r\n            TextJS: formMessage,\r\n            TitleJS: this.props.jsonStorage.titleCS,\r\n            SavedTextId: window.textId,\r\n            //InitialCheckboxes: this.props.jsonStorage.initialCheckboxes.map(a => Number(a))\r\n        };\r\n        var requestBody = JSON.stringify(item);\r\n        Loader.postData(this.props.listener, requestBody, this.url);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //отменяй подписки и асинхронную загрузку\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"submitStyle\">\r\n                <input type=\"checkbox\" id=\"submitButton\" className=\"regular-checkbox\" onClick={this.submit} />\r\n                <label htmlFor=\"submitButton\">Сохранить</label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateView;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { Loader } from \"./loader\";\r\n\r\nclass CreateView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { data: null };\r\n        this.url = '/api/create';\r\n        this.formId = null;\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.formId = ReactDOM.findDOMNode(this.refs.mainForm);\r\n        Loader.getData(this, this.url);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.data) var id = Number(this.state.data.savedTextId);\r\n        if (id != 0) window.textId = id;\r\n    }\r\n\r\n    render() {\r\n        var checkboxes = [];\r\n        if (this.state.data != null) {\r\n            for (var i = 0; i < this.state.data.genresNamesCS.length; i++) {\r\n                checkboxes.push(<Checkbox key={\"checkbox \" + i + this.state.time} id={i} jsonStorage={this.state.data} />);\r\n            }\r\n        }\r\n\r\n        var jsonStorage = this.state.data;\r\n        if (jsonStorage) {\r\n            if (!jsonStorage.textCS) jsonStorage.textCS = \"\";\r\n            if (!jsonStorage.titleCS) jsonStorage.titleCS = \"\";\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <form ref=\"mainForm\" id=\"dizzy\">\r\n                    {checkboxes}\r\n                    {this.state.data != null &&\r\n                        <SubmitButton listener={this} formId={this.formId} />\r\n                    }\r\n                </form>\r\n                {this.state.data != null &&\r\n                    <Message formId={this.formId} jsonStorage={jsonStorage} />\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass Checkbox extends React.Component {\r\n\r\n    render() {\r\n        var checked = this.props.jsonStorage.isGenreCheckedCS[this.props.id] == \"checked\" ? \"checked\" : \"\";\r\n        var getGenreName = (i) => { return this.props.jsonStorage.genresNamesCS[i]; };\r\n        return (\r\n            <div id=\"checkboxStyle\">\r\n                <input name=\"chkButton\" value={this.props.id} type=\"checkbox\" id={this.props.id} className=\"regular-checkbox\"\r\n                    defaultChecked={checked} />\r\n                <label htmlFor={this.props.id}>{getGenreName(this.props.id)}</label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass CheckboxBts extends React.Component {\r\n\r\n    render() {\r\n        var checked = this.props.jsonStorage.isGenreCheckedCS[this.props.id] == \"checked\" ? \"checked\" : \"\";\r\n        var getGenreName = (i) => { return this.props.jsonStorage.genresNamesCS[i]; };\r\n        return (\r\n            //нужен site.css\r\n            <label className=\"checkbox-btn\">\r\n                    <input name=\"chkButton\" value={this.props.id} type=\"checkbox\" id={this.props.id}\r\n                    defaultChecked = { checked } />\r\n                    <span style={{ lineHeight: 30 + 'px' }}>{getGenreName(this.props.id)}</span>\r\n            </label>\r\n        );\r\n    }\r\n}\r\n\r\nclass Message extends React.Component {\r\n//    constructor(props) {\r\n//       super(props);\r\n//    }\r\n\r\n    inputText = (e) => {\r\n        const newText = e.target.value;\r\n        this.props.jsonStorage.textCS = newText;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    inputTitle = (e) => {\r\n        const newText = e.target.value;\r\n        this.props.jsonStorage.titleCS = newText;\r\n        this.forceUpdate();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div >\r\n                <p />\r\n                {this.props.jsonStorage != null ?\r\n                    <div>\r\n                        <h5>\r\n                            <textarea name=\"ttl\" cols=\"66\" rows=\"1\" form=\"dizzy\"\r\n                                value={this.props.jsonStorage.titleCS} onChange={this.inputTitle} />\r\n                        </h5>\r\n                        <h5>\r\n                            <textarea name=\"msg\" cols=\"66\" rows=\"30\" form=\"dizzy\"\r\n                                value={this.props.jsonStorage.textCS} onChange={this.inputText} />\r\n                        </h5>\r\n                    </div>\r\n                    : \"loading..\"}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nclass SubmitButton extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.submit = this.submit.bind(this);\r\n        this.url = '/api/create';\r\n    }\r\n\r\n    submit(e) {\r\n        e.preventDefault();\r\n        var formData = new FormData(this.props.formId);\r\n        var checkboxesArray = (formData.getAll('chkButton')).map(a => Number(a) + 1);\r\n        var formMessage = formData.get('msg');\r\n        var formTitle = formData.get('ttl');\r\n        const item = {\r\n            CheckedCheckboxesJS: checkboxesArray,\r\n            TextJS: formMessage,\r\n            TitleJS: formTitle\r\n        };\r\n        var requestBody = JSON.stringify(item);\r\n        Loader.postData(this.props.listener, requestBody, this.url);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        //отменяй подписки и асинхронную загрузку\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"submitStyle\">\r\n                <input type=\"checkbox\" id=\"submitButton\" className=\"regular-checkbox\" onClick={this.submit} />\r\n                <label htmlFor=\"submitButton\">Создать</label>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CreateView;","import React from 'react';\r\nimport { Loader } from \"./loader\";\r\n\r\nclass CatalogView extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { data: null };\r\n        this.url = '/api/catalog';\r\n        this.mounted = true;\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.mounted = false;\r\n    }\r\n\r\n    componentDidMount() {\r\n        Loader.getDataById(this, 1, this.url);\r\n    }\r\n\r\n    click = (e) => {\r\n        e.preventDefault();\r\n        var target = Number(e.target.id.slice(7));\r\n        const item = {\r\n            pageNumber: this.state.data.pageNumber,\r\n            navigationButtons: [target],\r\n        };\r\n        var requestBody = JSON.stringify(item);\r\n        Loader.postData(this, requestBody, this.url);\r\n    }\r\n\r\n    redirect = (e) => {\r\n        e.preventDefault();\r\n        var id = Number(e.target.id);\r\n        this.props.listener.setState({ id: id });\r\n    }\r\n\r\n    render() {\r\n        if (!this.state.data) return null;\r\n        var songs = [];\r\n        for (let i = 0; i < this.state.data.titlesAndIds.length; i++) {\r\n            songs.push(<tr key={\"song \" + i} className=\"d-sm-table-row \"><td></td><td><a id={this.state.data.titlesAndIds[i].item2}\r\n                onClick={this.redirect}>{this.state.data.titlesAndIds[i].item1}</a></td></tr>);\r\n        }\r\n\r\n        return (\r\n            <div className=\"row\">\r\n                <p style={{ marginLeft: 12 + '%' }}>\r\n                    Всего песен: {this.state.data.songsCount} &nbsp;\r\n                    Страница: {this.state.data.pageNumber} &nbsp;\r\n                </p>\r\n                <p></p>\r\n                <p></p>\r\n                <table className=\"table\" id=\"catalogTable\">\r\n                    <thead className=\"thead-dark \">\r\n                        <tr>\r\n                            <th width=\"10%\"></th>\r\n                            <th width=\"80%\">\r\n                                <form>\r\n                                    <button id=\"js-nav-1\" className=\"btn btn-info\" onClick={this.click}>\r\n                                         &lt;Назад\r\n                                    </button>\r\n                                    &nbsp;\r\n                                    <button id=\"js-nav-2\" className=\"btn btn-info\" onClick={this.click}>\r\n                                          Вперёд&gt;\r\n                                    </button>\r\n                                </form>\r\n                            </th>\r\n                            <th width=\"10%\"></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {songs}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CatalogView;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { HomeView } from \"./read\";\r\nimport UpdateView from \"./update\";\r\nimport CreateView from \"./create\";\r\nimport CatalogView from \"./catalog\";\r\nimport { Login } from \"./login\";\r\nwindow.textId = 0;\r\nwindow.temp = null;\r\n\r\nclass Menu extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.select = this.select.bind(this);\r\n        this.visibilityCss = [\"act\", \"pas\", \"pas\", \"pas\"];\r\n        this.visibilityFlag = [true, false, false, false];\r\n        this.menu = [\"Посмотреть\", \"Поменять\", \"Создать\", \"Каталог\"];\r\n        this.state = { id: null };\r\n    }\r\n\r\n    select(e) {\r\n        var target = Number(e.target.id.slice(5));\r\n        //если меняем невыбранное\r\n        if (target === 1 && window.textId === 0) return;\r\n\r\n        this.visibilityFlag.forEach((value, index) => this.visibilityFlag[index] = false);\r\n        this.visibilityFlag[target] = !this.visibilityFlag[target];\r\n        this.forceUpdate();//this.setState(this.state)\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.id) this.setState({ id: null });\r\n        if (!this.visibilityFlag[0]) {\r\n            //костыль, убирает кнопку \"Поиск\"\r\n            ReactDOM.render(\r\n                <div>\r\n                </div>,\r\n                document.querySelector(\"#searchButton1\")\r\n            );\r\n        }\r\n    }\r\n\r\n    co\r\n\r\n    render() {\r\n        //костыль - переключаемся из catalog на changeText\r\n        if (this.state.id) {\r\n            this.visibilityFlag = [false, true, false, false];\r\n            window.textId = this.state.id;\r\n        }\r\n\r\n        this.visibilityFlag.forEach((value, index) => this.visibilityFlag[index] ?\r\n            this.visibilityCss[index] = \"act\" : this.visibilityCss[index] = \"pas\");\r\n        var buttons = [];\r\n        for (let i = 0; i < 4; i++) {\r\n            buttons.push(<button key={\"menu \" + i} onClick={this.select} id={\"menu \" + String(i)}\r\n                className={this.visibilityCss[i]}\r\n                //className=\"btn btn-info\" style={{ margin: 10 + 'px' }}\r\n            >\r\n                {this.menu[i]}</button>);\r\n        }\r\n\r\n        //+TODO: не отображать кнопку пока не загрузилось\r\n        //+TODO: менять цвет кнопки при выполнении POST запроса\r\n        //+TODO: зачем view={this.visibilityFlag[0]}\r\n        //TODO: список жанров точно один на всю сессию (кол-во песен в них будет отличаться) - зачем его грузить каждый раз?\r\n        //TODO: экран некрасиво мигает при переключении пунктов меню\r\n\r\n        return (\r\n            <div>\r\n                <div id=\"header\">\r\n                    {buttons}\r\n                </div>\r\n                {/*первый пункт меню*/}\r\n                {this.visibilityFlag[0] === true &&\r\n                    <div id=\"renderContainer1\">\r\n                        <HomeView />\r\n                    </div>\r\n                }\r\n                {/*второй пункт меню*/}\r\n                {this.visibilityFlag[1] === true &&\r\n                    <div id=\"renderContainer\">\r\n                    <UpdateView />\r\n                    </div>\r\n                }\r\n                {/*третий пункт меню*/}\r\n                {this.visibilityFlag[2] === true &&\r\n                    <div id=\"renderContainer\">\r\n                    <CreateView />\r\n                    </div>\r\n                }\r\n                {/*четвертый пункт меню*/}\r\n                {this.visibilityFlag[3] === true &&\r\n                    <div id=\"renderContainer\">\r\n                    <CatalogView listener={this}/>\r\n                    </div>\r\n                }\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//ReactDOM.render(\r\n//    <div>\r\n//        <Menu />\r\n//    </div>,\r\n//    document.querySelector(\"#renderMenu\")\r\n//);\r\n\r\nReactDOM.render(\r\n    <Login listener={this} />\r\n    , document.querySelector(\"#renderLoginForm\")\r\n);\r\n\r\nexport default Menu;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './bootstrap.css';\nimport './react.css';\nimport Menu from './menu';\n\nReactDOM.render(\n  <div>\n    <Menu />\n  </div>,\n  document.getElementById('renderMenu')\n);\n\n//<React.StrictMode><Menu /></React.StrictMode>\n\n"],"sourceRoot":""}